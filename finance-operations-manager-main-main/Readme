Finance Operations Manager
Description du projet
Ce projet est une application web de gestion financi√®re construite avec React et Vite. Il est con√ßu pour √™tre facilement d√©ploy√© et g√©r√© √† l'aide de Docker, en utilisant Nginx pour servir l'application en production.

Technologies utilis√©es
Frontend : React, TypeScript, Vite

Styling : Tailwind CSS

Conteneurisation : Docker, Docker Compose

Serveur de production : Nginx

Gestion des paquets : npm

Structure du projet
src/ : Le code source de l'application React.

dist/ : Le dossier de production g√©n√©r√© par la commande npm run build.

docker/ : Contient les configurations Docker, y compris la configuration Nginx pour servir l'application frontend.

Dockerfile : Le fichier d'instructions pour cr√©er l'image Docker de l'application frontend.

docker-compose.yml : Le fichier pour orchestrer les conteneurs (frontend, backend, base de donn√©es, etc.).

package.json : D√©finit les scripts de l'application et ses d√©pendances.

D√©marrage du projet
üöÄ Lancer l'application avec Docker (recommand√© pour la production)
Pour construire les images Docker et d√©marrer tous les services d√©finis dans docker-compose.yml, suivez ces √©tapes :

Assurez-vous que Docker Desktop est install√© et en cours d'ex√©cution sur votre machine.

Dans votre terminal, naviguez jusqu'√† la racine du projet.

Ex√©cutez la commande suivante pour construire les images et lancer les conteneurs :

docker-compose up -d --build

Le flag --build est important pour s'assurer que les derni√®res modifications sont prises en compte.

Le flag -d permet de lancer les conteneurs en arri√®re-plan.

L'application frontend sera accessible sur http://localhost:3000.

üíª Lancer l'application en d√©veloppement
Si vous souhaitez travailler sur le projet sans Docker, vous pouvez le lancer en d√©veloppement :

Installez les d√©pendances du projet :

npm install

D√©marrez le serveur de d√©veloppement Vite :

npm run dev

L'application sera accessible sur http://localhost:5173.

Commandes utiles
docker-compose up -d --build : Construit et d√©marre les conteneurs en arri√®re-plan.

docker-compose down : Arr√™te et supprime les conteneurs.

npm run build : Cr√©e la version optimis√©e de l'application dans le dossier dist.

npm run dev : D√©marre le serveur de d√©veloppement.